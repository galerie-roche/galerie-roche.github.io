{"version":3,"sources":["webpack:///./src/templates/work/styles.js","webpack:///./src/components/ArrowLabel.js","webpack:///./src/templates/work/index.js","webpack:///./src/components/Paragraphs.js"],"names":["Images","styled","div","withConfig","displayName","componentId","img","rems","space","ByAuthor","settings","colors","neutro500","ms","Arrow","span","withIntl","_ref","t","prev","react_default","a","createElement","aria-hidden","query","_Object$assign","context","objectWithoutPropertiesLoose_default","useEffect","scrollHorizontal","locale","pageContext","_context$pageContext$","page","work","previous","next","artist","artistName","join","name","preposition","lastname","mainImage","withPrefix","key","images","schemaOrgJSONLD","@context","@type","title","alternateName","image","config","siteMetadata","siteUrl","description","creator","sameAs","width","Object","assign","height","depth","medium","artMedium","surface","artworkSurface","PageWrapper","url","schema","utilities","className","date","i18n","to","Paragraphs","lines","components_ArrowLabel","length","map","index","src","alt","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","components","margin","slotsCount","Fragment","text","dangerouslySetInnerHTML","__html"],"mappings":"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","file":"component---src-templates-work-index-js-bec624bd77a98b6bb98b.js","sourcesContent":["import styled from 'styled-components';\nimport { ms, rems, settings, space } from '../../ui';\n\nconst Slide = styled.div`\n  position: relative;\n\n  img {\n    max-width: 100%;\n  }\n`;\n\nconst Thumb = styled.img`\n  margin: 0 10px;\n  max-width: 100px;\n  transition: all 0.3s ease-in-out;\n\n  &.tns-nav-active {\n    border: 2px solid red;\n    max-width: 105px;\n  }\n`;\n\nconst Images = styled.div`\n  height: 70vh;\n  overflow: hidden;\n\n  .content {\n    align-items: flex-start;\n    box-sizing: content-box;\n    display: flex;\n    height: inherit;\n    overflow-x: auto;\n    padding: 0 0 ${rems(20)};\n    width: 100%;\n\n    &.draggable {\n      cursor: move;\n      cursor: grab;\n\n      &:active {\n        cursor: grabbing;\n      }\n    }\n  }\n\n  .image {\n    margin: 0 ${space(0.5)};\n    max-height: 100%;\n    max-width: 100%;\n    width: auto;\n\n    &:first-child {\n      margin-left: 0;\n    }\n\n    &:last-child {\n      margin-right: 0;\n    }\n  }\n`;\n\nconst ByAuthor = styled.div`\n  display: block;\n  margin: 0 0 ${space()};\n\n  &::before {\n    color: ${settings.colors.neutro500};\n    content: '\\00d7';\n    display: inline-block;\n    font-size: ${ms(-.5)};\n    margin: 0 ${space(0.25)} 0 0;\n    vertical-align: middle;\n  }\n`;\n\nconst Info = styled.div`padding: 0 ${space()} 0 0;`;\n\nexport { ByAuthor, Images, Thumb };\nexport default Slide;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { withIntl } from '../i18n';\nimport { ms, settings, space } from '../ui';\n\nconst Arrow = styled.span`\n  color: ${settings.colors.neutro500};\n  display: inline-block;\n  font-size: ${ms(-1)};\n  margin: 0 ${space(0.25)} 0 0;\n  text-transform: uppercase;\n\n  span {\n    font-size: ${ms(0)};\n  }\n`;\n\nconst ArrowLabel = ({ t, prev }) => {\n  return (\n    <Arrow>\n      <span aria-hidden='true'>{prev ? '←' : '→'}</span>{' '}\n      {t(`commons.${prev ? 'previous' : 'next'}`)}\n    </Arrow>\n  );\n};\n\nexport default withIntl()(ArrowLabel);\n","import { graphql, withPrefix } from 'gatsby';\nimport React, { useEffect } from 'react';\n\nimport { ByAuthor, Images } from './styles';\nimport { join, scrollHorizontal } from '../../helpers';\nimport { Link, withIntl } from '../../i18n';\nimport ArrowLabel from '../../components/ArrowLabel';\nimport PageWrapper from '../../components/PageWrapper';\nimport Paragraphs from '../../components/Paragraphs';\nimport { Aside, Content, CustomDate, Details, Links, Row } from '../../ui/utilities';\nimport config from '../../../gatsby-config';\n\nconst WorkPage = ({ t, ...context }) => {\n  useEffect(() => {\n    scrollHorizontal();\n  });\n\n  const { locale } = context.pageContext;\n  const { work, previous, next, artist } = context.pageContext.page;\n  const artistName = join([artist.name, artist.preposition, artist.lastname], ' ');\n  const mainImage = withPrefix(`/assets/img/${artist.key}/${work.images[0]}`);\n\n  // https://schema.org/VisualArtwork\n  let schemaOrgJSONLD = {\n    '@context': 'http://schema.org',\n    '@type': 'VisualArtwork',\n    name: work.title,\n    alternateName: work.title,\n    image: config.siteMetadata.siteUrl + mainImage,\n    description: join(work.description, ' '),\n    creator: [\n      {\n        '@type': 'Person',\n        name: artistName,\n        sameAs: `${config.siteMetadata.siteUrl}/${locale}/${artist.key}`,\n      },\n    ],\n  };\n\n  if (work.width) {\n    schemaOrgJSONLD = Object.assign({}, schemaOrgJSONLD, {\n      width: [\n        {\n          '@type': 'Distance',\n          name: work.width,\n        },\n      ],\n    });\n  }\n\n  if (work.height) {\n    schemaOrgJSONLD = Object.assign({}, schemaOrgJSONLD, {\n      height: [\n        {\n          '@type': 'Distance',\n          name: work.height,\n        },\n      ],\n    });\n  }\n\n  if (work.depth) {\n    schemaOrgJSONLD = Object.assign({}, schemaOrgJSONLD, {\n      depth: [\n        {\n          '@type': 'Distance',\n          name: work.depth,\n        },\n      ],\n    });\n  }\n\n  if (work.medium) {\n    schemaOrgJSONLD = Object.assign({}, schemaOrgJSONLD, {\n      artMedium: work.medium,\n    });\n  }\n\n  if (work.surface) {\n    schemaOrgJSONLD = Object.assign({}, schemaOrgJSONLD, {\n      artworkSurface: work.surface,\n    });\n  }\n\n  return (\n    <PageWrapper\n      url={`/${locale}/${artist.key}/${work.key}`}\n      title={`${work.title} | ${artist.name}`}\n      image={withPrefix(`/img/${work.images[0]}`)}\n      description={join(work.description, ' ')}\n      image={mainImage}\n      schema={[schemaOrgJSONLD]}\n      {...context}>\n      <Row>\n        <Content>\n          <Details>\n            <h1 className='t-h2'>{work.title}</h1>\n            <CustomDate>{work.date}</CustomDate>\n            <ByAuthor>\n              <Link to={`/${artist.key}`}>{artistName}</Link>\n            </ByAuthor>\n            <Paragraphs lines={work.description} />\n          </Details>\n          <Links>\n            {previous && (\n              <li>\n                <ArrowLabel prev />\n                <Link to={`/${artist.key}/${previous.key}`}>{previous.title}</Link>\n              </li>\n            )}\n            {next && (\n              <li>\n                <ArrowLabel />\n                <Link to={`/${artist.key}/${next.key}`}>{next.title}</Link>\n              </li>\n            )}\n            {(previous || next) && <li className='divider' />}\n            <li>\n              <Link to={`/${artist.key}`}>\n                {t('commons.backToAuthor')}\n                {` ${artistName}`}\n              </Link>\n            </li>\n            <li>\n              <Link to={`/${t('routes.artists')}`}>{t('commons.backToAuthors')}</Link>\n            </li>\n          </Links>\n        </Content>\n        <Aside>\n          <Images>\n            <div className={`content ${work.images.length > 1 ? 'draggable' : ''}`}>\n              {work.images.map((image, index) => (\n                <img\n                  key={`${artist.key}_${index}`}\n                  src={withPrefix(`/assets/img/${artist.key}/${image}`)}\n                  alt={work.title}\n                  className='image'\n                />\n              ))}\n            </div>\n          </Images>\n        </Aside>\n      </Row>\n    </PageWrapper>\n  );\n};\n\nexport const query = graphql`\n  query WorkQuery($path: String!) {\n    sitePage(path: { eq: $path }) {\n      context {\n        locale\n        page {\n          artist {\n            key\n            name\n            preposition\n            lastname\n            works {\n              key\n            }\n          }\n          work {\n            key\n            date\n            images\n            title\n            description\n            width\n            depth\n            height\n            medium\n            surface\n          }\n          previous {\n            key\n            title\n          }\n          next {\n            key\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withIntl()(WorkPage);\n","import React from 'react';\nimport { Trans } from 'react-i18next';\n\nconst Paragraphs = ({ components, lines, margin }) => {\n  let slotsCount = -1;\n  return (\n    <React.Fragment>\n      {lines.map((text, index) => {\n        if (text === '') {\n          return <br />;\n        }\n        if (text === '[slot]') {\n          slotsCount += 1;\n          return components[slotsCount];\n        }\n        return (\n          <p\n            key={index}\n            className={margin ? '' : 'no-margin'}\n            dangerouslySetInnerHTML={{ __html: text }}\n          />\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nexport default Paragraphs;\n"],"sourceRoot":""}