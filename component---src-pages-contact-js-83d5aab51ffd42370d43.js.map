{"version":3,"sources":["webpack:///./src/pages/contact.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./gatsby-config.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.js","webpack:///./src/components/Footer.js","webpack:///./src/components/SEO.js","webpack:///./src/components/Layout.js","webpack:///./src/components/PageWrapper.js"],"names":["withIntl","_ref","t","props","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_PageWrapper__WEBPACK_IMPORTED_MODULE_4__","Object","assign","title","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","React","InternalPageRenderer","json","propTypes","PropTypes","shape","string","isRequired","siteMetadata","url","siteUrl","defaultLanguage","languages","de","en","plugins","resolve","options","name","short_name","start_url","background_color","theme_color","display","include_favicon","icon","id","includeInDevelopment","createContext","object","func","routes","home","profile","clients","technologies","publications","NavItems","withContext","_ref$language","language","originalPath","pageContext","react_default","style","float","entries","map","_ref2","code","label","key","gatsby_link_default","activeClassName","to","item","src_i18n","Date","getFullYear","SEO","description","image","schema","objectWithoutPropertiesLoose_default","useTranslation","baseUrl","config","defaultTitle","metaTitle","metaDescription","currentUrl","trim","imageUrl","urljoin","push","@context","@type","address","addressLocality","addressRegion","postalCode","streetAddress","openingHours","telephone","faxNumber","email","priceRange","alternateName","Helmet_default","lang","content","property","type","JSON","stringify","defaultProps","logo","i18n","children","titleTemplate","components_SEO","Header","Footer","setContext","react","components_Layout"],"mappings":"8JAUeA,wBANC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAMC,EAATC,IAAAH,EAAA,cACZI,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CAAaC,MAAOT,EAAE,kBAAsBC,GAA5C,kCCLJ,IAAsBS,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAhB,GAAkB,IAAfiB,EAAejB,EAAfiB,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOC,IAAMhB,cAAciB,IAApBf,OAAAC,OAAA,CACLQ,WACAC,iBACGA,EAAcM,QAIrBR,EAAiBS,UAAY,CAC3BR,SAAUS,IAAUC,MAAM,CACxBN,SAAUK,IAAUE,OAAOC,aAC1BA,YAGUb,+BCrBfJ,EAAOC,QAAU,CACfiB,aAAc,CACZpB,MAAO,gBACPqB,IAAK,0BACLC,QAAS,0BACTC,gBAAiB,KACjBC,UAAW,CACTC,GAAI,KACJC,GAAI,OAGRC,QAAS,CAEP,6BACA,CACEC,QAAO,yBACPC,QAAS,CACPC,KAAM,gBACNC,WAAY,gBACZC,UAAW,IACXC,iBAAkB,UAClBC,YAAa,UACbC,QAAS,aACTC,iBAAiB,EACjBC,KAAM,2BAGV,wBACA,wBACA,0BACA,CACET,QAAS,kCACTC,QAAS,CACPS,GAAI,4BACJC,sBAAsB,IAG1B,wBACA,0LC1BuB3B,IAAM4B,cAAc,IA0CvCxB,IAAUyB,OACTzB,IAAUE,OAAOC,WAChBH,IAAU0B,KACR1B,IAAU0B,KCpDtB,IAAMC,EAAS,CACXC,KAAM,IACNC,QAAS,WACTC,QAAS,WACTC,aAAc,gBACdC,aAAc,iBAGZC,EAAW,CACbxB,GAAI,CAAC,OAAQ,UAAW,UAAW,eAAgB,gBACnDC,GAAI,CAAC,OAAQ,UAAW,UAAW,iBAkCxBwB,cAAY7D,cA/BR,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAH4D,EAAA7D,EAAM8D,gBAAN,IAAAD,EAAiB,KAAjBA,EAAsCE,EAAtC/D,EAAuBgE,YAAeD,aAAtC,OACfE,EAAA5D,EAAAC,cAAA,cACI2D,EAAA5D,EAAAC,cAAA,WACI2D,EAAA5D,EAAAC,cAAA,UACI2D,EAAA5D,EAAAC,cAAA,MAAI4D,MAAO,CAAEC,MAAO,UACf3D,OAAO4D,QAAQlC,KAAWmC,IAAI,SAAAC,GAAA,IAAEC,EAAFD,EAAA,GAAQE,EAARF,EAAA,UAC3BC,IAAST,EACLG,EAAA5D,EAAAC,cAAA,QAAMmE,IAAKF,GAAOC,GAEdP,EAAA5D,EAAAC,cAACoE,EAAArE,EAAD,CACIsE,gBAAgB,SAChBF,IAAKF,EACLK,GAAE,GAAKL,GAAOR,GAAgB,KAE7BS,MAKpBb,EAASG,GAAUO,IAAI,SAACQ,GAAD,OACpBZ,EAAA5D,EAAAC,cAAA,MAAImE,IAAKI,GACLZ,EAAA5D,EAAAC,cAACwE,EAAA,EAAD,CAAMF,GAAIvB,EAAOwB,GAAOF,gBAAgB,UACnC1E,EAAC,cAAe4E,aC1B9B9E,gBAXI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAH,OACfgE,EAAA5D,EAAAC,cAAA,cACI2D,EAAA5D,EAAAC,cAAA,mBAEI2D,EAAA5D,EAAAC,cAAA,aAAO,IAAIyE,MAAOC,eAClBf,EAAA5D,EAAAC,cAACwE,EAAA,EAAD,CAAMF,GAAG,UAAU3E,EAAE,iBACrBgE,EAAA5D,EAAAC,cAACwE,EAAA,EAAD,CAAMF,GAAG,YAAY3E,EAAE,qFCO7BgF,EAAM,SAAAjF,GAA4E,IAAzE8D,EAAyE9D,EAAzE8D,SAAU/B,EAA+D/B,EAA/D+B,IAAKrB,EAA0DV,EAA1DU,MAAOwE,EAAmDlF,EAAnDkF,YAAaC,EAAsCnF,EAAtCmF,MAAOC,EAA+BpF,EAA/BoF,OAAWlF,EAAoBmF,IAAArF,EAAA,2DAC9EC,EAAMqF,cAANrF,EAEFsF,EAAUC,IAAO1D,aAAaC,IAC9B0D,EAAeD,IAAO1D,aAAapB,MACnCgF,EAAYhF,IAAU+E,EAAe/E,EAAWA,EAApC,MAA+C+E,EAC3DE,EAAkBT,GAA4BjF,EAAE,oBAChD2F,EAA4B,KAAf7D,EAAI8D,OAAgBN,EAApB,GAAiCA,EAAUxD,EACxD+D,EAAWC,IAAQR,EAASJ,GA8BlC,OA5BAC,EAAOY,KAAK,CACVC,WAAY,oBACZC,QAAS,aACTC,QAAS,CACPD,QAAS,gBACTE,gBAAiB,sBACjBC,cAAe,QACfC,WAAY,WACZC,cAAe,iBAEjB/D,KAAMiD,EACNe,aAAc,CAAE,oBAAqB,kBACrCC,UAAW,yBACXC,UAAW,yBACX3E,IAAKwD,EACLJ,MAAUI,EAAL,SACLoB,MAAO,0BACPC,WAAY,OAGdxB,EAAOY,KAAK,CACVC,WAAY,oBACZC,QAAS,UACTW,cAAepB,EACfjD,KAAMiD,EACN1D,IAAKwD,IAILtB,EAAA5D,EAAAC,cAACwG,EAAAzG,EAAWH,EACV+D,EAAA5D,EAAAC,cAAA,QAAMyG,KAAMjD,IACZG,EAAA5D,EAAAC,cAAA,aAAQoF,GACRzB,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,QAAQwE,QAAStB,IAC5BzB,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,mBAAmBwE,QAAStB,IACvCzB,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,cAAcwE,QAASrB,IAElC1B,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,UAAUD,QAAQ,YACjC/C,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,SAASD,QAASpB,IACjC3B,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,WAAWD,QAAStB,IACnCzB,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,iBAAiBD,QAASrB,IACzC1B,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,WAAWD,QAASlB,IACnC7B,EAAA5D,EAAAC,cAAA,QAAM2G,SAAS,eAAeD,QAAStB,IAEvCzB,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,eAAewE,QAAQ,YAClC/C,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,gBAAgBwE,QAAStB,IACpCzB,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,sBAAsBwE,QAASrB,IAC1C1B,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,gBAAgBwE,QAASlB,IACpC7B,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,cAAcwE,QAASpB,IAClC3B,EAAA5D,EAAAC,cAAA,QAAMkC,KAAK,eAAewE,QAAStB,IACnCzB,EAAA5D,EAAAC,cAAA,UAAQ4G,KAAK,uBAAuBC,KAAKC,UAAUhC,MAKzDH,EAAIoC,aAAe,CACjBvD,SAAU0B,IAAO1D,aAAaG,gBAC9BF,IAAKyD,IAAO1D,aAAaE,QACzBtB,MAAO8E,IAAO1D,aAAapB,MAC3ByE,MAAOK,IAAO1D,aAAawF,KAC3BlC,OAAQ,IAGKH,QCrEAlF,gBAZA,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAGsH,EAANvH,EAAMuH,KAAMC,EAAZxH,EAAYwH,SAAU9G,EAAtBV,EAAsBU,MAAtB,OACXuD,EAAA5D,EAAAC,cAAA,WACI2D,EAAA5D,EAAAC,cAACwG,EAAAzG,EAAD,CAAQK,MAAOA,GAAST,EAAE,cAAewH,cAAexH,EAAE,uBACtDgE,EAAA5D,EAAAC,cAAA,QAAMyG,KAAMQ,EAAKzD,YAErBG,EAAA5D,EAAAC,cAACoH,EAAD,MACAzD,EAAA5D,EAAAC,cAACqH,EAAD,MACA1D,EAAA5D,EAAAC,cAAA,YAAOkH,GACPvD,EAAA5D,EAAAC,cAACsH,EAAD,SCHOC,gBAPK,SAAA7H,GAAA,IAAGwH,EAAHxH,EAAGwH,SAAU9G,EAAbV,EAAaU,MAAb,OAChBoH,EAAA,cAACC,EAAD,KACKrH,GAASoH,EAAA,cAAChB,EAAAzG,EAAD,CAAQK,MAAOA,IACxB8G","file":"component---src-pages-contact-js-83d5aab51ffd42370d43.js","sourcesContent":["import React from 'react';\nimport { withIntl } from '../i18n';\nimport PageWrapper from '../components/PageWrapper';\n\nconst Contact = ({ t, ...props }) => (\n    <PageWrapper title={t('contact.title')} {...props}>\n        Contact\n    </PageWrapper>\n);\n\nexport default withIntl()(Contact);\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = {\n  siteMetadata: {\n    title: 'Galerie Roche',\n    url: 'https://galerieroche.de',\n    siteUrl: 'https://galerieroche.de',\n    defaultLanguage: 'de',\n    languages: {\n      de: 'DE',\n      en: 'EN',\n    },\n  },\n  plugins: [\n    // 'gatsby-plugin-remove-trailing-slashes',\n    'gatsby-plugin-react-helmet',\n    {\n      resolve: `gatsby-plugin-manifest`,\n      options: {\n        name: 'galerie-roche',\n        short_name: 'Galerie Roche',\n        start_url: '/',\n        background_color: '#174C5B',\n        theme_color: '#174C5B',\n        display: 'minimal-ui',\n        include_favicon: true,\n        icon: 'assets/img/favicon.png' // This path is relative to the root of the site.\n      },\n    },\n    'gatsby-plugin-offline',\n    'gatsby-plugin-postcss',\n    'gatsby-plugin-nprogress',\n    {\n      resolve: 'gatsby-plugin-google-tagmanager',\n      options: {\n        id: 'YOUR_GOOGLE_TAGMANAGER_ID',\n        includeInDevelopment: false,\n      },\n    },\n    'gatsby-plugin-sitemap',\n    'gatsby-plugin-styled-components',\n  ],\n};\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from 'react';\nimport { withContext } from './PageContext';\nimport { Link as GatsbyLink } from 'gatsby';\nimport { Link, languages, withIntl } from '../i18n';\n\nconst routes = {\n    home: '/',\n    profile: '/profile',\n    clients: '/clients',\n    technologies: '/technologies',\n    publications: '/publications',\n};\n\nconst NavItems = {\n    de: ['home', 'profile', 'clients', 'technologies', 'publications'],\n    en: ['home', 'profile', 'clients', 'technologies'],\n};\n\nconst PageHeader = ({ t, language = 'en', pageContext: { originalPath } }) => (\n    <header>\n        <nav>\n            <ul>\n                <li style={{ float: 'right' }}>\n                    {Object.entries(languages).map(([code, label]) =>\n                        code === language ? (\n                            <span key={code}>{label}</span>\n                        ) : (\n                                <GatsbyLink\n                                    activeClassName='active'\n                                    key={code}\n                                    to={`${code}${originalPath || ''}`}\n                                >\n                                    {label}\n                                </GatsbyLink>\n                            )\n                    )}\n                </li>\n                {NavItems[language].map((item) => (\n                    <li key={item}>\n                        <Link to={routes[item]} activeClassName='active'>\n                            {t(`navigation.${item}`)}\n                        </Link>\n                    </li>\n                ))}\n            </ul>\n        </nav>\n    </header>\n);\n\nexport default withContext(withIntl()(PageHeader));\n","import React from 'react';\nimport { withIntl, Link } from '../i18n';\n\nconst PageFooter = ({ t }) => (\n    <footer>\n        <p>\n            © 2001-\n            <span>{new Date().getFullYear()}</span>\n            <Link to=\"/legal\">{t('footer.legal')}</Link>\n            <Link to=\"/contact\">{t('footer.contact')}</Link>\n        </p>\n    </footer>\n);\n\nexport default withIntl()(PageFooter);\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { useTranslation } from 'react-i18next';\nimport urljoin from 'url-join';\n\nimport config from '../../gatsby-config';\n\ninterface IProps {\n  language?: string;\n  title?: string;\n  url?: string;\n  description?: string;\n  image?: string;\n  schema?: any[];\n}\n\nconst SEO = ({ language, url, title, description, image, schema, ...props }: IProps) => {\n  const { t } = useTranslation();\n\n  const baseUrl = config.siteMetadata.url;\n  const defaultTitle = config.siteMetadata.title;\n  const metaTitle = title === defaultTitle ? title : `${title} | ${defaultTitle}`;\n  const metaDescription = description ? description : t('meta.description');\n  const currentUrl = url.trim() === '' ? baseUrl : `${baseUrl}${url}`;\n  const imageUrl = urljoin(baseUrl, image);\n\n  schema.push({\n    '@context': 'http://schema.org',\n    '@type': 'ArtGallery',\n    address: {\n      '@type': 'PostalAddress',\n      addressLocality: 'Bremen, Deutschland',\n      addressRegion: 'DE-HB',\n      postalCode: 'D. 28203',\n      streetAddress: 'Fedelhören 30',\n    },\n    name: defaultTitle,\n    openingHours: [ 'Mo-Fr 14:00-18:00', 'Sa 10:00-13:00' ],\n    telephone: '+49 (0) 421 / 32 37 47',\n    faxNumber: '+49 (0) 421 / 32 81 07',\n    url: baseUrl,\n    image: `${baseUrl}/image`,\n    email: 'contact@galerieroche.de',\n    priceRange: '$$',\n  });\n\n  schema.push({\n    '@context': 'http://schema.org',\n    '@type': 'WebSite',\n    alternateName: defaultTitle,\n    name: defaultTitle,\n    url: baseUrl,\n  });\n\n  return (\n    <Helmet {...props}>\n      <html lang={language} />\n      <title>{metaTitle}</title>\n      <meta name='title' content={metaTitle} />\n      <meta name='application-name' content={metaTitle} />\n      <meta name='description' content={metaDescription} />\n\n      <meta property='og:type' content='website' />\n      <meta property='og:url' content={currentUrl} />\n      <meta property='og:title' content={metaTitle} />\n      <meta property='og:description' content={metaDescription} />\n      <meta property='og:image' content={imageUrl} />\n      <meta property='og:site_name' content={metaTitle} />\n\n      <meta name='twitter:card' content='summary' />\n      <meta name='twitter:title' content={metaTitle} />\n      <meta name='twitter:description' content={metaDescription} />\n      <meta name='twitter:image' content={imageUrl} />\n      <meta name='twitter:url' content={currentUrl} />\n      <meta name='twitter:site' content={metaTitle} />\n      <script type='application/ld+json'>{JSON.stringify(schema)}</script>\n    </Helmet>\n  );\n};\n\nSEO.defaultProps = {\n  language: config.siteMetadata.defaultLanguage,\n  url: config.siteMetadata.siteUrl,\n  title: config.siteMetadata.title,\n  image: config.siteMetadata.logo,\n  schema: [],\n};\n\nexport default SEO;\n","import React from 'react';\nimport Helmet from 'react-helmet';\nimport { withIntl } from '../i18n';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Seo from './SEO';\n\nconst Layout = ({ t, i18n, children, title }) => (\n    <div>\n        <Helmet title={title || t('meta.title')} titleTemplate={t('meta.titleTemplate')}>\n            <html lang={i18n.language} />\n        </Helmet>\n        <Seo />\n        <Header />\n        <main>{children}</main>\n        <Footer />\n    </div>\n);\n\nexport default withIntl()(Layout);\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\nimport { setContext } from '../components/PageContext';\nimport Layout from './Layout';\n\nconst PageWrapper = ({ children, title }) => (\n    <Layout>\n        {title && <Helmet title={title} />}\n        {children}\n    </Layout>\n);\n\nexport default setContext(PageWrapper);\n"],"sourceRoot":""}