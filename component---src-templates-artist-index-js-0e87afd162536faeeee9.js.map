{"version":3,"sources":["webpack:///./src/templates/artist/index.js"],"names":["query","withIntl","_ref","t","context","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2___default","_context$pageContext$","pageContext","page","key","name","available","preposition","lastname","description","birthdate","deathdate","works","locale","date","join","artistDate","artistName","worksList","filter","work","mainImage","withPrefix","images","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_PageWrapper__WEBPACK_IMPORTED_MODULE_7__","Object","assign","url","title","image","_ui_utilities__WEBPACK_IMPORTED_MODULE_8__","className","_i18n__WEBPACK_IMPORTED_MODULE_6__","to","map","index","srcSet","alt"],"mappings":"oOAyEaA,EAAK,aAwBHC,wBAhFI,SAAAC,GAAuB,IAApBC,EAAoBD,EAApBC,EAAMC,EAAcC,IAAAH,EAAA,OAAAI,EAWpCF,EAAQG,YAAYC,KATtBC,EAFsCH,EAEtCG,IAEAC,GAJsCJ,EAGtCK,UAHsCL,EAItCI,MACAE,EALsCN,EAKtCM,YACAC,EANsCP,EAMtCO,SACAC,EAPsCR,EAOtCQ,YACAC,EARsCT,EAQtCS,UACAC,EATsCV,EAStCU,UACAC,EAVsCX,EAUtCW,MAEMC,EAAWd,EAAQG,YAAnBW,OACFC,EAAOC,YAAK,CAAEL,EAAWC,GAAa,OACtCK,EAAaN,GAAaC,EAAb,IAA6BG,EAA7B,IAAuC,GACpDG,EAAaF,YAAK,CAAEV,EAAME,EAAaC,GAAY,KACnDU,EAAYN,EAAMO,OAAO,SAAAC,GAAI,OAAuB,IAAnBA,EAAKd,YACtCe,EAAYC,YAAU,eAAgBlB,EAAhB,IAAuBc,EAAU,GAAGK,OAAO,IAEvE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,CACEC,IAAG,IAAMjB,EAAN,IAAgBT,EACnB2B,MAAOd,EACPR,YAAaA,EACbuB,MAAOX,GACHtB,GACJyB,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,QAAQjB,GACtBO,EAAAC,EAAAC,cAACO,EAAA,EAAD,KAAajB,IAGfQ,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,IAAMtC,EAAE,mBAAsBA,EAAE,2BAE1C0B,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACET,EAAAC,EAAAC,cAACO,EAAA,EAAD,KACGf,EAAUmB,IAAI,SAACjB,EAAMkB,GAAP,OACbd,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAM7B,IAAQA,EAAL,IAAYkC,GACnBd,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAAMC,GAAE,IAAMhC,EAAN,IAAagB,EAAKhB,KACxBoB,EAAAC,EAAAC,cAAA,OACEQ,UAAU,QACVK,OAAQjB,YAAU,eAAgBlB,EAAhB,IAAuBgB,EAAKG,OAAO,IACrDiB,IAAKpB,EAAKW,QAEZP,EAAAC,EAAAC,cAAA,MAAIQ,UAAU,SAASd,EAAKW","file":"component---src-templates-artist-index-js-0e87afd162536faeeee9.js","sourcesContent":["import { graphql, withPrefix } from 'gatsby';\nimport React from 'react';\n\nimport { join } from '../../helpers';\nimport { Link, withIntl } from '../../i18n';\nimport PageWrapper from '../../components/PageWrapper';\nimport {\n  Aside,\n  Cards,\n  Card,\n  Content,\n  CustomDate,\n  Details,\n  PageTitle,\n  Row,\n} from '../../ui/utilities';\n\nconst ArtistPage = ({ t, ...context }) => {\n  const {\n    key,\n    available,\n    name,\n    preposition,\n    lastname,\n    description,\n    birthdate,\n    deathdate,\n    works,\n  } = context.pageContext.page;\n  const { locale } = context.pageContext;\n  const date = join([ birthdate, deathdate ], ' - ');\n  const artistDate = birthdate || deathdate ? `(${date})` : '';\n  const artistName = join([ name, preposition, lastname ], ' ');\n  const worksList = works.filter(work => work.available !== false);\n  const mainImage = withPrefix(`/assets/img/${key}/${worksList[0].images[0]}`);\n\n  return (\n    <PageWrapper\n      url={`/${locale}/${key}`}\n      title={artistName}\n      description={description}\n      image={mainImage}\n      {...context}>\n      <Row>\n        <Content>\n          <Details>\n            <h1 className='t-h2'>{artistName}</h1>\n            <CustomDate>{artistDate}</CustomDate>\n            {/* <Paragraphs lines={description} /> */}\n          </Details>\n          <Link to={`/${t('routes.artists')}`}>{t('commons.backToAuthors')}</Link>\n        </Content>\n        <Aside>\n          <Cards>\n            {worksList.map((work, index) => (\n              <Card key={`${key}_${index}`}>\n                <Link to={`/${key}/${work.key}`}>\n                  <img\n                    className='image'\n                    srcSet={withPrefix(`/assets/img/${key}/${work.images[0]}`)}\n                    alt={work.title}\n                  />\n                  <h2 className='title'>{work.title}</h2>\n                </Link>\n              </Card>\n            ))}\n          </Cards>\n        </Aside>\n      </Row>\n    </PageWrapper>\n  );\n};\n\nexport const query = graphql`\n  query ArtistQuery($path: String!) {\n    sitePage(path: { eq: $path }) {\n      context {\n        locale\n        page {\n          key\n          name\n          preposition\n          lastname\n          description\n          birthdate\n          deathdate\n          works {\n            key\n            title\n            images\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default withIntl()(ArtistPage);\n"],"sourceRoot":""}